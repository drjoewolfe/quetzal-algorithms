package org.jwolfe.quetzal.algorithms.lc;

public class FindTheDifference {
    class Solution {
        public char findTheDifference(String s, String t) {
            if(s == null || t == null || s.length() != t.length() - 1) {
                return ' ' ;
            }

            int xor = 0;
            for(int i = 0; i < s.length(); i++) {
                char c = s.charAt(i);
                xor ^= c;
            }

            for(int i = 0; i < t.length(); i++) {
                char c = t.charAt(i);
                xor ^= c;
            }

            return (char) xor;
        }
    }

    class Solution_Correct {
        public char findTheDifference(String s, String t) {
            if(s == null || t == null || s.length() + 1 != t.length()) {
                return ' ';
            }

            int xor = 0;
            for(int i = 0; i < t.length(); i++) {
                char c = t.charAt(i);
                xor ^= c;
            }

            for(int i = 0; i < s.length(); i++) {
                char c = s.charAt(i);
                xor ^= c;
            }

            return (char) xor;
        }
    }

    class Solution_Map {
        public char findTheDifference(String s, String t) {
            if(s == null || t == null || s.length() + 1 != t.length()) {
                return ' ';
            }

            int[] counter = new int[26];

            for(int i = 0; i < t.length(); i++) {
                char c = t.charAt(i);
                counter[c - 'a']++;
            }

            for(int i = 0; i < s.length(); i++) {
                char c = s.charAt(i);
                counter[c - 'a']--;
            }


            for(int i = 0; i < 26; i++) {
                if(counter[i] > 0) {
                    return (char) ('a' + i);
                }
            }

            return ' ';
        }
    }
}

//    389. Find the Difference
//    Easy
//    You are given two strings s and t.
//
//    String t is generated by random shuffling string s and then add one more letter at a random position.
//
//    Return the letter that was added to t.
//
//
//
//    Example 1:
//
//    Input: s = "abcd", t = "abcde"
//    Output: "e"
//    Explanation: 'e' is the letter that was added.
//    Example 2:
//
//    Input: s = "", t = "y"
//    Output: "y"
//
//
//    Constraints:
//
//    0 <= s.length <= 1000
//    t.length == s.length + 1
//    s and t consist of lowercase English letters.